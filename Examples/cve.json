[
  {
    "cve_name": "CVE-2014-0114",
    "cve_score": 7.5,
    "exploitable": "YES (MALWARE)",
    "description": "Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils through 1.9.2, does not suppress the class property, which allows remote attackers to \"manipulate\" the ClassLoader and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/velocity/lib/velocity-tools-generic-3.0.jar <- via commons-beanutils:commons-beanutils/1.9.3 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/velocity/lib/velocity-tools-generic-3.0.jar "
    ],
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via commons-beanutils:commons-beanutils/1.9.3 (package)"
    ]
  },
  {
    "cve_name": "CVE-2015-1832",
    "cve_score": 9.1,
    "exploitable": "NO",
    "description": "XML external entity (XXE) vulnerability in the SqlXmlUtil code in Apache Derby before 10.12.1.1, when a Java Security Manager is not in place, allows context-dependent attackers to read arbitrary files or cause a denial of service (resource consumption) via vectors involving XmlVTI and the XML datatype.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/example/example-DIH/solr/db/lib/derby-10.9.1.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2016-4434",
    "cve_score": 7.8,
    "exploitable": "NO",
    "description": "Apache Tika before 1.13 does not properly initialize the XML parser or choose handlers, which might allow remote attackers to conduct XML External Entity (XXE) attacks via vectors involving (1) spreadsheets in OOXML files and (2) XMP metadata in PDF and other file formats, a related issue to CVE-2016-2175.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2016-5007",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2016-6809",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "Apache Tika before 1.14 allows Java code execution for serialized objects embedded in MATLAB files. The issue exists because Tika invokes JMatIO to do native deserialization.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2016-9878",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "An issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the ResourceServlet were not properly sanitized and as a result exposed to directory traversal attacks.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2017-1000190",
    "cve_score": 9.1,
    "exploitable": "YES",
    "description": "SimpleXML (latest version 2.7.1) is vulnerable to an XXE vulnerability resulting SSRF, information disclosure, DoS and so on.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/test-framework/lib/junit4-ant-2.7.2.jar <- via Simple XML/2.7.1 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2017-15095",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2017-17485",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2017-7525",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1000873",
    "cve_score": 6.5,
    "exploitable": "YES",
    "description": "Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8. Exploitable: YES Introduced in: 2.7.1 Resolved in: 2.9.8 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-11307",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-11761",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "In Apache Tika 0.1 to 1.18, the XML parsers were not configured to limit entity expansion. They were therefore vulnerable to an entity expansion vulnerability which can lead to a denial of service attack.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-11762",
    "cve_score": 5.9,
    "exploitable": "NO",
    "description": "In Apache Tika 0.9 to 1.18, in a rare edge case where a user does not specify an extract directory on the commandline (--extract-dir=) and the input file has an embedded file with an absolute path, such as \"C:/evil.bat\", tika-app would overwrite that file.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-11796",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "In Apache Tika 1.19 (CVE-2018-11761), we added an entity expansion limit for XML parsing. However, Tika reuses SAXParsers and calls reset() after each parse, which, for Xerces2 parsers, as per the documentation, removes the user-specified SecurityManager and thus removes entity expansion limits after the first parse. Apache Tika versions from 0.1 to 1.19 are therefore still vulnerable to entity expansions which can lead to a denial of service attack. Users should upgrade to 1.19.1 or later.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-12022",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Jodd-db jar (for database access for the Jodd framework) in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-12023",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Oracle JDBC jar in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1257",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1270",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1271",
    "cve_score": 5.9,
    "exploitable": "YES (MALWARE)",
    "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1272",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1275",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.16 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack. This CVE addresses the partial fix for CVE-2018-1270 in the 4.3.x branch of the Spring Framework.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1313",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "In Apache Derby 10.3.1.4 to 10.14.1.0, a specially-crafted network packet can be used to request the Derby Network Server to boot a database whose location and contents are under the user's control. If the Derby Network Server is not running with a Java Security Manager policy file, the attack is successful. If the server is using a policy file, the policy file must permit the database location to be read for the attack to work. The default Derby Network Server policy file distributed with the affected releases includes a permissive policy as the default Network Server policy, which allows the attack to work.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/example/example-DIH/solr/db/lib/derby-10.9.1.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2018-1335",
    "cve_score": 8.1,
    "exploitable": "YES (MALWARE)",
    "description": "From Apache Tika versions 1.7 to 1.17, clients could send carefully crafted headers to tika-server that could be used to inject commands into the command line of the server running tika-server. This vulnerability only affects those running tika-server on a server that is open to untrusted clients. The mitigation is to upgrade to Tika 1.18.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1338",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "A carefully crafted (or fuzzed) file can trigger an infinite loop in Apache Tika's BPGParser in versions of Apache Tika before 1.18.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-1339",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "A carefully crafted (or fuzzed) file can trigger an infinite loop in Apache Tika's ChmParser in versions of Apache Tika before 1.18.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-14718",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization. Exploitable: NO Introduced in: 2.7.0 Resolved in: 2.9.7 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-14719",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-14720",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-14721",
    "cve_score": 10,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-15756",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-17197",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "A carefully crafted or corrupt sqlite file can cause an infinite loop in Apache Tika's SQLite3Parser in versions 1.8-1.19.1 of Apache Tika.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-19360",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-19361",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-19362",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization. Exploitable: NO Introduced in: 2.7.0 Resolved in: 2.7.9.5 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-5968",
    "cve_score": 8.1,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-7489",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-8017",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "In Apache Tika 1.2 to 1.18, a carefully crafted file can trigger an infinite loop in the IptcAnpaParser.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2018-8088",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "org.slf4j.ext.EventData in the slf4j-ext module in QOS.CH SLF4J before 1.8.0-beta2 allows remote attackers to bypass intended access restrictions via crafted data. EventData in the slf4j-ext module in QOS.CH SLF4J, has been fixed in SLF4J versions 1.7.26 later and in the 2.0.x series.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/lib/ext/log4j-slf4j-impl-2.14.1.jar <- via org.slf4j:slf4j-ext/1.7.25 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/log4j-slf4j-impl-2.14.1.jar <- via org.slf4j:slf4j-ext/1.7.25 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-10086",
    "cve_score": 7.3,
    "exploitable": "NO",
    "description": "In Apache Commons Beanutils 1.9.2, a special BeanIntrospector class was added which allows suppressing the ability for an attacker to access the classloader via the class property available on all Java objects. We, however were not using this by default characteristic of the PropertyUtilsBean.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/velocity/lib/velocity-tools-generic-3.0.jar <- via commons-beanutils:commons-beanutils/1.9.3 (package)"
    ],
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via commons-beanutils:commons-beanutils/1.9.3 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-10088",
    "cve_score": 8.8,
    "exploitable": "NO",
    "description": "A carefully crafted or corrupt zip file can cause an OOM in Apache Tika's RecursiveParserWrapper in versions 1.7-1.21. Users should upgrade to 1.22 or later.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-10094",
    "cve_score": 7.8,
    "exploitable": "NO",
    "description": "A carefully crafted package/compressed file that, when unzipped/uncompressed yields the same file (a quine), causes a StackOverflowError in Apache Tika's RecursiveParserWrapper in versions 1.7-1.21. Apache Tika users should upgrade to 1.22 or later.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-11272",
    "cve_score": 7.3,
    "exploitable": "NO",
    "description": "Spring Security, versions 4.2.x up to 4.2.12, and older unsupported versions support plain text passwords using PlaintextPasswordEncoder. If an application using an affected version of Spring Security is leveraging PlaintextPasswordEncoder and a user has a null encoded password, a malicious user (or attacker) can authenticate using a password of \"null\".",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-12086",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.7.9.6 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-12384",
    "cve_score": 5.9,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.7.9.6 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-12415",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "In Apache POI up to 4.1.0, when using the tool XSSFExportToXml to convert user-provided Microsoft Excel documents, a specially crafted document can allow an attacker to read files from the local filesystem or from internal network resources via XML External Entity (XXE) Processing.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-3.0.1.jar <- via org.apache.poi:poi/4.0.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-12814",
    "cve_score": 5.9,
    "exploitable": "YES",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.7.9.6 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-14379",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionMan gerLookup), leading to remote code execution.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-14439",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath. Exploitable: NO Introduced in: 2.7.0 Resolved in: 2.7.9.6 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-14540",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-14892",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code. Exploitable: NO Introduced in: 2.7.0 Resolved in: 2.8.11.5 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-14893",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code. Exploitable: NO Introduced in: 2.7.1 Resolved in: 2.8.11.5 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-16335",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-16942",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-16943",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-17267",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-17531",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-17571",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via log4j:log4j/1.2.17 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-17638",
    "cve_score": 9.4,
    "exploitable": "NO",
    "description": "In Eclipse Jetty, versions 9.4.27.v20200227 to 9.4.29.v20200521, in case of too large response headers, Jetty throws an exception to produce an HTTP 431 error. When this happens, the ByteBuffer containing the HTTP response headers is released back to the ByteBufferPool twice. Because of this double release, two threads can acquire the same ByteBuffer from the pool and while thread1 is about to use the ByteBuffer to write response1 data, thread2 fills the ByteBuffer with other data. Thread1 then proceeds to write the buffer that now contains different data. This results in client1, which issued request1 seeing data from another request or response which could contain sensitive data belonging to client2 (HTTP session ids, authentication credentials, etc.). If the Jetty version cannot be upgraded, the vulnerability can be significantly reduced by configuring a responseHeaderSize significantly larger than the requestHeaderSize (12KB responseHeaderSize and 8KB requestHeaderSize).",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-20330",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2019-3795",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "Spring Security versions 4.2.x prior to 4.2.12, 5.0.x prior to 5.0.12, and 5.1.x prior to 5.1.5 contain an insecure randomness vulnerability when using SecureRandomFactoryBean#setSeed to configure a SecureRandom instance. In order to be impacted, an honest application must provide a seed and make the resulting random material available to an attacker for inspection.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-10650",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "A deserialization flaw was discovered in jackson-databind through 2.9.10.4. It could allow an unauthenticated user to perform code execution via ignite-jta or quartz-core: org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup, org.apache.ignite.cache.jta.jndi.CacheJndiTmFactory, and org.quartz.utils.JNDIConnectionProvider.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-10673",
    "cve_score": 8.8,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus). Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.9.10.4 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-10969",
    "cve_score": 8.8,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to javax.swing.JEditorPane.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-13936",
    "cve_score": 8.8,
    "exploitable": "NO",
    "description": "An attacker that is able to modify Velocity templates may execute arbitrary Java code or run arbitrary system commands with the same privileges as the account running the Servlet container. This applies to applications that allow untrusted users to upload/modify velocity templates running Apache Velocity Engine versions up to 2.2.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/velocity/lib/velocity-engine-core-2.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-13949",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "In Apache Thrift 0.9.3 to 0.13.0, malicious RPC clients could send short messages which would result in a large memory allocation, potentially leading to denial of service.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/jaegertracer-configurator/lib/libthrift-0.13.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-13956",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/httpclient-4.5.12.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/httpclient-4.5.12.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/httpmime-4.5.12.jar <- via org.apache.httpcomponents:httpclient/4.5.12 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.httpcomponents:httpclient/4.5.12 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/httpmime-4.5.12.jar <- via org.apache.httpcomponents:httpclient/4.5.12 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-14338",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "A flaw was found in Wildfly's implementation of Xerces, specifically in the way the XMLSchemaValidator class in the JAXP component of Wildfly enforced the \"use-grammar-pool-only\" feature. This flaw allows a specially-crafted XML file to manipulate the validation process in certain cases. This issue is the same flaw as CVE-2020-14621, which affected OpenJDK, and uses a similar code. This flaw affects all Xerces JBoss versions before 2.12.0.SP3.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via xerces:xercesImpl/2.12.0 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/xercesImpl-2.12.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-15250",
    "cve_score": 5.5,
    "exploitable": "YES",
    "description": "In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/isoparser-1.9.41.2.jar <- via junit:junit/4.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-15522",
    "cve_score": 5.9,
    "exploitable": "NO",
    "description": "Bouncy Castle BC Java before 1.66, BC C# .NET before 1.8.7, BC-FJA before 1.0.1.2, 1.0.2.1, and BC-FNA before 1.0.1.1 have a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.bouncycastle:bcprov-jdk15on/1.65 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-encrypt-3.0.0.jar <- via org.bouncycastle:bcprov-jdk15on/1.60 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/bcprov-jdk15on-1.65.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-1945",
    "cve_score": 6.3,
    "exploitable": "NO",
    "description": "Apache Ant 1.1 to 1.9.14 and 1.10.0 to 1.10.7 uses the default temporary directory identified by the Java system property java.io.tmpdir for several tasks and may thus leak sensitive information. The fixcrlf and replaceregexp tasks also copy files from the temporary directory back into the build tree allowing an attacker to inject modified source files into the build process.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/test-framework/lib/ant-1.8.2.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/janino-3.0.9.jar <- via org.apache.ant:ant/1.7.1 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-1950",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "A carefully crafted or corrupt PSD file can cause excessive memory usage in Apache Tika's PSDParser in versions 1.0-1.23.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-1951",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "A carefully crafted or corrupt PSD file can cause an infinite loop in Apache Tika's PSDParser in versions 1.0-1.23.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-24616",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP).",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-24750",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.9.10.6 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-25649",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-26939",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "In Legion of the Bouncy Castle BC before 1.61 and BC-FJA before 1.0.1.2, attackers can obtain sensitive information about a private exponent because of Observable Differences in Behavior to Error Inputs. This occurs in org.bouncycastle.crypto.encodings.OAEPEncoding. Sending invalid ciphertext that decrypts to a short payload in the OAEP Decoder could result in the throwing of an early exception, potentially leaking some information about the private exponent of the RSA private key performing the encryption.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-encrypt-3.0.0.jar <- via org.bouncycastle:bcprov-jdk15on/1.60 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-27216",
    "cve_score": 7,
    "exploitable": "YES",
    "description": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-27218",
    "cve_score": 4.8,
    "exploitable": "NO",
    "description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-27223",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of “quality” (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-28052",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "An issue was discovered in Legion of the Bouncy Castle BC Java 1.65 and 1.66. The OpenBSDBCrypt.checkPassword utility method compared incorrect data when checking the password, allowing incorrect passwords to indicate they were matching with previously hashed ones that were different.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.bouncycastle:bcprov-jdk15on/1.65 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/bcprov-jdk15on-1.65.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-35490",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-35491",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-35728",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl).",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36179",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.9.10.8 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36180",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.9.10.8 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36181",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.9.10.8 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36182",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.9.10.8 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36183",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool. Exploitable: YES Introduced in: 2.7.00 Resolved in: 2.9.10.8 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36184",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36185",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36186",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36187",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36188",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.9.10.8 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36189",
    "cve_score": 8.1,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.Dr verManagerConnectionSource. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.9.10.8 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.Dr verManagerConnectionSource.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-36518",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jackson-databind-2.12.3.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/jackson-databind-2.12.3.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-5421",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-7692",
    "cve_score": 9.1,
    "exploitable": "YES",
    "description": "PKCE support is not implemented in accordance with the RFC for OAuth 2.0 for Native Apps. Without the use of PKCE, the authorization code returned by an authorization server is not enough to guarantee that the client that issued the initial authorization request is the one that will be authorized. An attacker is able to obtain the authorization code using a malicious app on the client-side and use it to gain authorization to the protected resource. This affects the package com.google.oauth-client:google-oauth-client before 1.31.0.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-oauth-client-1.29.2.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-8840",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter. Exploitable: YES Introduced in: 2.7.0 Resolved in: 2.7.9.7 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-8908",
    "cve_score": 3.3,
    "exploitable": "YES",
    "description": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/test-framework/lib/junit4-ant-2.7.2.jar <- via Guava: Google Core Libraries for Java/25.0-jre (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/guava-25.1-jre.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-cloud-storage-1.113.14.jar <- via com.google.guava:guava/30.1-android (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2020-9488",
    "cve_score": 3.7,
    "exploitable": "NO",
    "description": "Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender. Fixed in Apache Log4j 2.12.3 and 2.13.1",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via log4j:log4j/1.2.17 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-9546",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config).",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-9547",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2020-9548",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2021-20190",
    "cve_score": 8.1,
    "exploitable": "NO",
    "description": "A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability. Exploitable: NO Introduced in: 2.7.0 Resolved in: 2.9.10.7 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)"
    ]
  },
  {
    "cve_name": "CVE-2021-21290",
    "cve_score": 5.5,
    "exploitable": "YES",
    "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user. Exploitable: YES Introduced in: 4.1.46.Final Resolved in: 4.1.59.Final Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-buffer-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-resolver-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-codec-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-buffer-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-native-unix-common-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-resolver-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-codec-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-native-epoll-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-native-epoll-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-common-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-native-unix-common-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-common-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-21409",
    "cve_score": 5.9,
    "exploitable": "NO",
    "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final. Exploitable: NO Introduced in: 4.1.46.Final Resolved in: 4.1.61.Final Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-codec-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-codec-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-codec/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-codec/4.1.50.Final (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-22569",
    "cve_score": 5.5,
    "exploitable": "YES",
    "description": "An issue in protobuf-java allowed the interleaving of com.google.protobuf.UnknownFieldSet fields in such a way that would be processed out of order. A small malicious payload can occupy the parser for several minutes by creating large numbers of short-lived objects that cause frequent, repeated pauses. We recommend upgrading libraries beyond the vulnerable versions.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via com.google.protobuf:protobuf-java/3.11.4 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/protobuf-java-3.11.0.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-cloud-storage-1.113.14.jar <- via com.google.protobuf:protobuf-java/3.15.5 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/protobuf-java-3.11.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-22570",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via com.google.protobuf:protobuf-java/3.11.4 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/protobuf-java-3.11.0.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/protobuf-java-3.11.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-22573",
    "cve_score": 7.3,
    "exploitable": "NO",
    "description": "The vulnerability is that IDToken verifier does not verify if token is properly signed. Signature verification makes sure that the token's payload comes from valid provider, not from someone else. An attacker can provide a compromised token with custom payload. The token will pass the validation on the client side. We recommend upgrading to version 1.33.3 or above",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-oauth-client-1.29.2.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-cloud-storage-1.113.14.jar <- via com.google.oauth-client:google-oauth-client/1.31.4 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-27807",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "A carefully crafted PDF file can trigger an infinite loop while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.pdfbox:pdfbox/2.0.19 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/pdfbox-2.0.19.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-27906",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.pdfbox:pdfbox/2.0.19 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/pdfbox-2.0.19.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-28165",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)"
    ]
  },
  {
    "cve_name": "CVE-2021-28657",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "A carefully crafted or corrupt file may trigger an infinite loop in Tika's MP3Parser up to and including Tika 1.25. Apache Tika users should upgrade to 1.26 or later.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-core-1.24.1.jar",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-java7-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-xmp-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-29425",
    "cve_score": 4.8,
    "exploitable": "YES",
    "description": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/contrib/velocity/lib/velocity-engine-core-2.0.jar <- via Apache Commons IO/2.5 (package)"
    ]
  },
  {
    "cve_name": "CVE-2021-31811",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "In Apache PDFBox, a carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.23 and prior 2.0.x versions.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.pdfbox:pdfbox/2.0.19 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/pdfbox-2.0.19.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-31812",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "In Apache PDFBox, a carefully crafted PDF file can trigger an infinite loop while loading the file. This issue affects Apache PDFBox version 2.0.23 and prior 2.0.x versions.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.pdfbox:pdfbox/2.0.19 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/pdfbox-2.0.19.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-33813",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "An XXE issue in SAXBuilder in JDOM through 2.0.6 allows attackers to cause a denial of service via a crafted HTTP request.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.jdom:jdom2/2.0.6 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jdom2-2.0.6.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-34428",
    "cve_score": 3.5,
    "exploitable": "NO",
    "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)"
    ]
  },
  {
    "cve_name": "CVE-2021-34429",
    "cve_score": 5.3,
    "exploitable": "YES (MALWARE)",
    "description": "For Eclipse Jetty versions 9.4.37-9.4.42, 10.0.1-10.0.5 & 11.0.1-11.0.5, URIs can be crafted using some encoded characters to access the content of the WEB-INF directory and/or bypass some security constraints. This is a variation of the vulnerability reported in CVE-2021-28164/GHSA-v7ff-8wcx-gmc5.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-deploy-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-webapp-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-35515",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/commons-compress-1.20.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-35516",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/commons-compress-1.20.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-35517",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/commons-compress-1.20.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-36090",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/commons-compress-1.20.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-36373",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "When reading a specially crafted TAR archive an Apache Ant build can be made to allocate large amounts of memory that finally leads to an out of memory error, even for small inputs. This can be used to disrupt builds using Apache Ant. Apache Ant prior to 1.9.16 and 1.10.11 were affected.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/test-framework/lib/ant-1.8.2.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/janino-3.0.9.jar <- via org.apache.ant:ant/1.7.1 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-37136",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-codec-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-codec-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-codec/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-codec/4.1.50.Final (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-37137",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-codec-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-codec-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-codec/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-codec/4.1.50.Final (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-37404",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "There is a potential heap buffer overflow in Apache Hadoop libhdfs native code. Opening a file path provided by user without validation may result in a denial of service or arbitrary code execution. Users should upgrade to Apache Hadoop 2.10.2, 3.2.3, 3.3.2 or higher.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/hadoop-common-3.2.2.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-37714",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "jsoup is a Java library for working with HTML. Those using jsoup versions prior to 1.14.2 to parse untrusted HTML or XML may be vulnerable to DOS attacks. If the parser is run on user supplied input, an attacker may supply content that causes the parser to get stuck (loop indefinitely until cancelled), to complete more slowly than usual, or to throw an unexpected exception. This effect may support a denial of service attack. The issue is patched in version 1.14.2. There are a few available workarounds. Users may rate limit input parsing, limit the size of inputs based on system resources, and/or implement thread watchdogs to cap and timeout parse runtimes.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.jsoup:jsoup/1.13.1 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-4104",
    "cve_score": 7.5,
    "exploitable": "YES (MALWARE)",
    "description": "JMSAppender in Log4j 1.2 is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration. The attacker can provide TopicBindingName and TopicConnectionFactoryBindingName configurations causing JMSAppender to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-44228. Note this issue only affects Log4j 1.2 when specifically configured to use JMSAppender, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via log4j:log4j/1.2.17 (package)"
    ]
  },
  {
    "cve_name": "CVE-2021-44228",
    "cve_score": 10,
    "exploitable": "YES (MALWARE)",
    "description": "Apache Log4j2 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. This vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/log4j-core-2.14.1.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/ext/log4j-core-2.14.1.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-44548",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "An Improper Input Validation vulnerability in DataImportHandler of Apache Solr allows an attacker to provide a Windows UNC path resulting in an SMB network call being made from the Solr host to another host on the network. If the attacker has wider access to the network, this may lead to SMB attacks, which may result in: * The exfiltration of sensitive data such as OS user hashes (NTLM/LM hashes), * In case of misconfigured systems, SMB Relay Attacks which can lead to user impersonation on SMB Shares or, in a worse-case scenario, Remote Code Execution This issue affects all Apache Solr versions prior to 8.11.1. This issue only affects Windows.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/dist/solr-core-8.10.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-44832",
    "cve_score": 6.6,
    "exploitable": "YES (MALWARE)",
    "description": "Apache Log4j2 is vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the Java protocol.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/log4j-core-2.14.1.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/ext/log4j-core-2.14.1.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-45046",
    "cve_score": 9,
    "exploitable": "YES (MALWARE)",
    "description": "It was found that the fix to address CVE-2021-44228 (Log4Shell) was incomplete in certain non-default configurations. This could allow attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. The issue was fixed by removing support for message lookup patterns and disabling JNDI functionality by default.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/log4j-core-2.14.1.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/ext/log4j-core-2.14.1.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-45105",
    "cve_score": 5.9,
    "exploitable": "YES (MALWARE)",
    "description": "Some Log4j2 versions do not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/log4j-core-2.14.1.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/ext/log4j-core-2.14.1.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2021-46877",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "jackson-databind 2.10.x through 2.12.x before 2.12.6 and 2.13.x before 2.13.1 allows attackers to cause a denial of service (2 GB transient heap usage per read) in uncommon situations involving JsonNode JDK serialization.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jackson-databind-2.12.3.jar",
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/jackson-databind-2.12.3.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-2047",
    "cve_score": 2.7,
    "exploitable": "NO",
    "description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-http-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-http-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-http-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-2048",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "In Eclipse Jetty HTTP/2 server implementation, when encountering an invalid HTTP/2 request, the error handling has a bug that can wind up not properly cleaning up the active connections and associated resources. This can lead to a Denial of Service scenario where there are no enough resources left to process good requests.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/http2-server-9.4.41.v20210516.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-22965",
    "cve_score": 9.8,
    "exploitable": "YES (MALWARE)",
    "description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2022-22968",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2022-22970",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2022-22971",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2022-23302",
    "cve_score": 8.8,
    "exploitable": "NO",
    "description": "JMSSink in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a TopicConnectionFactoryBindingName configuration causing JMSSink to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-4104. Note this issue only affects Log4j 1.x when specifically configured to use JMSSink, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via log4j:log4j/1.2.17 (package)"
    ]
  },
  {
    "cve_name": "CVE-2022-23305",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "By design, the JDBCAppender in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from PatternLayout. The message converter, %m, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed. Note this issue only affects Log4j 1.x when specifically configured to use the JDBCAppender, which is not the default. Beginning in version 2.0-beta8, the JDBCAppender was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via log4j:log4j/1.2.17 (package)"
    ]
  },
  {
    "cve_name": "CVE-2022-23307",
    "cve_score": 8.8,
    "exploitable": "NO",
    "description": "CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via log4j:log4j/1.2.17 (package)"
    ]
  },
  {
    "cve_name": "CVE-2022-23437",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "There's a vulnerability within the Apache Xerces Java (XercesJ) XML parser when handling specially crafted XML document payloads. This causes, the XercesJ XML parser to wait in an infinite loop, which may sometimes consume system resources for prolonged duration. This vulnerability is present within XercesJ version 2.12.1 and the previous versions.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via xerces:xercesImpl/2.12.0 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/xercesImpl-2.12.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-23596",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "Junrar is an open source java RAR archive library. In affected versions A carefully crafted RAR archive can trigger an infinite loop while extracting said archive. The impact depends solely on how the application uses the library, and whether files can be provided by malignant users. The problem is patched in 7.4.1. There are no known workarounds and users are advised to upgrade as soon as possible.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via com.github.junrar:junrar/4.0.0 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-24823",
    "cve_score": 5.5,
    "exploitable": "YES",
    "description": "Netty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one's own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-buffer-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-resolver-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-codec-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-buffer-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-native-unix-common-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-resolver-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-codec-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-native-epoll-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-native-epoll-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-common-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-native-unix-common-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-common-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-25168",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "Apache Hadoop's FileUtil.unTar(File, File) API does not escape the input file name before being passed to the shell. An attacker can inject arbitrary commands. This is only used in Hadoop 3.3 InMemoryAliasMap.completeBootstrapTransfer, which is only ever run by a local user. It has been used in Hadoop 2.x for yarn localization, which does enable remote code execution. It is used in Apache Spark, from the SQL command ADD ARCHIVE. As the ADD ARCHIVE command adds new binaries to the classpath, being able to execute shell scripts does not confer new permissions to the caller. SPARK-38305. \"Check existence of file before untarring/zipping\", which is included in 3.3.0, 3.1.4, 3.2.2, prevents shell commands being executed, regardless of which version of the hadoop libraries are in use. Users should upgrade to Apache Hadoop 2.10.2, 3.2.4, 3.3.3 or upper (including HADOOP-18136).",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/hadoop-common-3.2.2.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-25647",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/gson-2.7.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/protobuf-java-util-3.11.0.jar <- via com.google.code.gson:gson/2.8.6 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-cloud-storage-1.113.14.jar <- via com.google.code.gson:gson/2.8.6 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-26336",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "A shortcoming in the HMEF package of poi-scratchpad (Apache POI) allows an attacker to cause an Out of Memory exception. This package is used to read TNEF files (Microsoft Outlook and Microsoft Exchange Server). If an application uses poi-scratchpad to parse TNEF files and the application allows untrusted users to supply them, then a carefully crafted file can cause an Out of Memory exception. This issue affects poi-scratchpad version 5.2.0 and prior versions. Users are recommended to upgrade to poi-scratchpad 5.2.1. Exploitable: NO Introduced in: 3.8-beta1 Resolved in: 5.2.1 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: A shortcoming in the HMEF package of poi-scratchpad (Apache POI) allows an attacker to cause an Out of Memory exception. This package is used to read TNEF files (Microsoft Outlook and Microsoft Exchange Server). If an application uses poi-scratchpad to parse TNEF files and the application allows untrusted users to supply them, then a carefully crafted file can cause an Out of Memory exception. This issue affects poi-scratchpad version 5.2.0 and prior versions. Users are recommended to upgrade to poi-scratchpad 5.2.1.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/poi-scratchpad-4.1.2.jar",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/poi-4.1.2.jar",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-3.0.1.jar <- via org.apache.poi:poi/4.0.0 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-26612",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "In Apache Hadoop, The unTar function uses unTarUsingJava function on Windows and the built-in tar utility on Unix and other OSes. As a result, a TAR entry may create a symlink under the expected extraction directory which points to an external directory. A subsequent TAR entry may extract an arbitrary file into the external directory using the symlink name. This however would be caught by the same targetDirPath check on Unix because of the getCanonicalPath call. However on Windows, getCanonicalPath doesn't resolve symbolic links, which bypasses the check. unpackEntries during TAR extraction follows symbolic links which allows writing outside expected base directory on Windows. This was addressed in Apache Hadoop 3.2.3",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/hadoop-common-3.2.2.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-30126",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "In Apache Tika, a regular expression in our StandardsText class, used by the StandardsExtractingContentHandler could lead to a denial of service caused by backtracking on a specially crafted file. This only affects users who are running the StandardsExtractingContentHandler, which is a non-standard handler. This is fixed in 1.28.2 and 2.4.0",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-core-1.24.1.jar",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-java7-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-xmp-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-30973",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "We failed to apply the fix for CVE-2022-30126 to the 1.x branch in the 1.28.2 release. In Apache Tika, a regular expression in the StandardsText class, used by the StandardsExtractingContentHandler could lead to a denial of service caused by backtracking on a specially crafted file. This only affects users who are running the StandardsExtractingContentHandler, which is a non-standard handler. This is fixed in 1.28.3.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-core-1.24.1.jar",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-java7-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-xmp-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-3171",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "A parsing issue with binary data in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via com.google.protobuf:protobuf-java/3.11.4 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/protobuf-java-3.11.0.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-cloud-storage-1.113.14.jar <- via com.google.protobuf:protobuf-java/3.15.5 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/protobuf-java-3.11.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-32287",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "A relative path traversal vulnerability in a FileUtil class used by the PEAR management component of Apache UIMA allows an attacker to create files outside the designated target directory using carefully crafted ZIP entry names. This issue affects Apache UIMA Apache UIMA version 3.3.0 and prior versions. Note that PEAR files should never be installed into an UIMA installation from untrusted sources because PEAR archives are executable plugins that will be able to perform any actions with the same privileges as the host Java Virtual Machine.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.uima:uimaj-core/3.1.1 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-33879",
    "cve_score": 3.3,
    "exploitable": "NO",
    "description": "The initial fixes in CVE-2022-30126 and CVE-2022-30973 for regexes in the StandardsExtractingContentHandler were insufficient, and we found a separate, new regex DoS in a different regex in the StandardsExtractingContentHandler. These are now fixed in 1.28.4 and 2.4.1.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-core-1.24.1.jar",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-java7-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-xmp-1.24.1.jar <- via org.apache.tika:tika-core/1.24.1 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/vorbis-java-tika-0.8.jar <- via org.apache.tika:tika-core/1.12 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-3509",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "A parsing issue similar to CVE-2022-3171, but with textformat in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via com.google.protobuf:protobuf-java/3.11.4 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/protobuf-java-3.11.0.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-cloud-storage-1.113.14.jar <- via com.google.protobuf:protobuf-java/3.15.5 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/protobuf-java-3.11.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-3510",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "A parsing issue similar to CVE-2022-3171, but with Message-Type Extensions in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via com.google.protobuf:protobuf-java/3.11.4 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/protobuf-java-3.11.0.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-cloud-storage-1.113.14.jar <- via com.google.protobuf:protobuf-java/3.15.5 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/protobuf-java-3.11.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-36033",
    "cve_score": 6.1,
    "exploitable": "YES",
    "description": "jsoup is a Java HTML parser, built for HTML editing, cleaning, scraping, and cross-site scripting (XSS) safety. jsoup may incorrectly sanitize HTML including `javascript:` URL expressions, which could allow XSS attacks when a reader subsequently clicks that link. If the non-default `SafeList.preserveRelativeLinks` option is enabled, HTML including `javascript:` URLs that have been crafted with control characters will not be sanitized. If the site that this HTML is published on does not set a Content Security Policy, an XSS attack is then possible. This issue is patched in jsoup 1.15.3. Users should upgrade to this version. Additionally, as the unsanitized input may have been persisted, old content should be cleaned again using the updated version. To remediate this issue without immediately upgrading: - disable `SafeList.preserveRelativeLinks`, which will rewrite input URLs as absolute URLs - ensure an appropriate [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) is defined. (This should be used regardless of upgrading, as a defence-in-depth best practice.)",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.jsoup:jsoup/1.13.1 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-36364",
    "cve_score": 8.8,
    "exploitable": "NO",
    "description": "Apache Calcite Avatica JDBC driver creates HTTP client instances based on class names provided via `httpclient_impl` connection property; however, the driver does not verify if the class implements the expected interface before instantiating it, which can lead to code execution loaded via arbitrary classes and in rare cases remote code execution. To exploit the vulnerability: 1) the attacker needs to have privileges to control JDBC connection parameters; 2) and there should be a vulnerable class (constructor with URL parameter and ability to execute code) in the classpath. From Apache Calcite Avatica 1.22.0 onwards, it will be verified that the class implements the expected interface before invoking its constructor.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/avatica-core-1.18.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-39135",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "Apache Calcite 1.22.0 introduced the SQL operators EXISTS_NODE, EXTRACT_XML, XML_TRANSFORM and EXTRACT_VALUE do not restrict XML External Entity references in their configuration, making them vulnerable to a potential XML External Entity (XXE) attack. Therefore any client exposing these operators, typically by using Oracle dialect (the first three) or MySQL dialect (the last one), is affected by this vulnerability (the extent of it will depend on the user under which the application is running). From Apache Calcite 1.32.0 onwards, Document Type Declarations and XML External Entity resolution are disabled on the impacted operators.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/calcite-core-1.27.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-40152",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/s3-repository/lib/woodstox-core-6.2.4.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/woodstox-core-6.2.4.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/woodstox-core-6.2.4.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-41853",
    "cve_score": 9.8,
    "exploitable": "YES",
    "description": "Those using java.sql.Statement or java.sql.PreparedStatement in hsqldb (HyperSQL DataBase) to process untrusted input may be vulnerable to a remote code execution attack. By default it is allowed to call any static method of any Java class in the classpath resulting in code execution. The issue can be prevented by updating to 2.7.1 or by setting the system property \"hsqldb.method_class_names\" to classes which are allowed to be called. For example, System.setProperty(\"hsqldb.method_class_names\", \"abc\") or Java argument -Dhsqldb.method_class_names=\"abc\" can be used. From version 2.7.1 all classes by default are not accessible except those in java.lang.Math and need to be manually enabled.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/example/example-DIH/solr/db/lib/hsqldb-2.4.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-42003",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "In FasterXML jackson-databind before versions 2.13.4.1 and 2.12.17.1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jackson-databind-2.12.3.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/jackson-databind-2.12.3.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-42004",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jackson-databind-2.12.3.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/spatial4j-0.7.jar <- via com.fasterxml.jackson.core:jackson-databind/2.7.9.2 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/htrace-core4-4.1.0-incubating.jar <- via jackson-databind/2.4.0 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/prometheus-exporter/lib/jackson-databind-2.12.3.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-42889",
    "cve_score": 9.8,
    "exploitable": "YES (MALWARE)",
    "description": "Apache Commons Text performs variable interpolation, allowing properties to be dynamically evaluated and expanded. The standard format for interpolation is \"${prefix:name}\", where \"prefix\" is used to locate an instance of org.apache.commons.text.lookup.StringLookup that performs the interpolation. Starting with version 1.5 and continuing through 1.9, the set of default Lookup instances included interpolators that could result in arbitrary code execution or contact with remote servers. These lookups are: - \"script\" - execute expressions using the JVM script execution engine (javax.script) - \"dns\" - resolve dns records - \"url\" - load values from urls, including from remote servers Applications using the interpolation defaults in the affected versions may be vulnerable to remote code execution or unintentional contact with remote servers if untrusted configuration values are used. Users are recommended to upgrade to Apache Commons Text 1.10.0, which disables the problematic interpolators by default.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-text-1.6.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2022-46337",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "A cleverly devised username might bypass LDAP authentication checks. In LDAP-authenticated Derby installations, this could let an attacker fill up the disk by creating junk Derby databases. In LDAP-authenticated Derby installations, this could also allow the attacker to execute malware which was visible to and executable by the account which booted the Derby server. In LDAP-protected databases which weren't also protected by SQL GRANT/REVOKE authorization, this vulnerability could also let an attacker view and corrupt sensitive data and run sensitive database functions and procedures.Mitigation:Users should upgrade to Java 21 and Derby 10.17.1.0.Alternatively, users who wish to remain on older Java versions should build their own Derby distribution from one of the release families to which the fix was backported: 10.16, 10.15, and 10.14. Those are the releases which correspond, respectively, with Java LTS versions 17, 11, and 8.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/example/example-DIH/solr/db/lib/derby-10.9.1.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-20861",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2023-20863",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2023-26048",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory). Exploitable: NO Introduced in: 7.0.0.M0 Resolved in: 9.4.51.v20230217 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-rewrite-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-alpn-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-alpn-java-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/start.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-xml-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-alpn-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-alpn-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-jmx-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-security-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-26049",
    "cve_score": 5.3,
    "exploitable": "YES",
    "description": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue. Exploitable: YES Introduced in: 7.0.0.M0 Resolved in: 9.4.51.v20230217 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue. Exploitable: YES Introduced in: 9.0.0.v20130308 Resolved in: 9.4.47 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue. Exploitable: YES Introduced in: 9.4.39.v20210325 Resolved in: 9.4.43 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue. Exploitable: YES Introduced in: 9.4.39.v20210325 Resolved in: 9.4.51.v20230217 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue. Exploitable: YES Introduced in: 9.4.41.v20210516 Resolved in: 9.4.51.v20230217 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-rewrite-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-alpn-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-http-client-transport-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-client/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-alpn-java-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/start.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-xml-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-deploy-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-alpn-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-http-client-transport-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-client/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-alpn-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-webapp-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-jmx-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-security-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-26464",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "** UNSUPPORTED WHEN ASSIGNED **When using the Chainsaw or SocketAppender components with Log4j 1.x on JRE less than 1.7, an attacker that manages to cause a logging entry involving a specially-crafted (ie, deeply nested) hashmap or hashtable (depending on which logging component is in use) to be processed could exhaust the available memory in the virtual machine and achieve Denial of Service when the object is deserialized. This issue affects Apache Log4j before 2. Affected users are recommended to update to Log4j 2.x.NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via log4j:log4j/1.2.17 (package)"
    ]
  },
  {
    "cve_name": "CVE-2023-2976",
    "cve_score": 7.1,
    "exploitable": "NO",
    "description": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.Even though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/test-framework/lib/junit4-ant-2.7.2.jar <- via Guava: Google Core Libraries for Java/25.0-jre (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/guava-25.1-jre.jar",
      "unpacked_files/0/solr-8.10.0/contrib/gcs-repository/lib/google-cloud-storage-1.113.14.jar <- via com.google.guava:guava/30.1-android (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-31582",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "jose4j before v0.9.3 allows attackers to set a low iteration count of 1000 or less.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jose4j-0.6.5.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-32697",
    "cve_score": 9.8,
    "exploitable": "NO",
    "description": "SQLite JDBC is a library for accessing and creating SQLite database files in Java. Sqlite-jdbc addresses a remote code execution vulnerability via JDBC URL. This issue impacting versions 3.6.14.1 through 3.41.2.1 and has been fixed in version 3.41.2.2.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.xerial:sqlite-jdbc/3.30.1 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-33201",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "Bouncy Castle For Java before 1.74 is affected by an LDAP injection vulnerability. The vulnerability only affects applications that use an LDAP CertStore from Bouncy Castle to validate X.509 certificates. During the certificate validation process, Bouncy Castle inserts the certificate's Subject Name into an LDAP search filter without any escaping, which leads to an LDAP injection vulnerability.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.bouncycastle:bcprov-jdk15on/1.65 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-encrypt-3.0.0.jar <- via org.bouncycastle:bcprov-jdk15on/1.60 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/bcprov-jdk15on-1.65.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-33202",
    "cve_score": 5.5,
    "exploitable": "YES",
    "description": "Bouncy Castle for Java before 1.73 contains a potential Denial of Service (DoS) issue within the Bouncy Castle org.bouncycastle.openssl.PEMParser class. This class parses OpenSSL PEM encoded streams containing X.509 certificates, PKCS8 encoded keys, and PKCS7 objects. Parsing a file that has crafted ASN.1 data through the PEMParser causes an OutOfMemoryError, which can enable a denial of service attack. (For users of the FIPS Java API: BC-FJA 1.0.2.3 and earlier are affected; BC-FJA 1.0.2.4 is fixed.) Exploitable: YES Introduced in: 1.47 Resolved in: unknown Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Bouncy Castle for Java before 1.73 contains a potential Denial of Service (DoS) issue within the Bouncy Castle org.bouncycastle.openssl.PEMParser class. This class parses OpenSSL PEM encoded streams containing X.509 certificates, PKCS8 encoded keys, and PKCS7 objects. Parsing a file that has crafted ASN.1 data through the PEMParser causes an OutOfMemoryError, which can enable a denial of service attack. (For users of the FIPS Java API: BC-FJA 1.0.2.3 and earlier are affected; BC-FJA 1.0.2.4 is fixed.)",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.bouncycastle:bcprov-jdk15on/1.65 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/bcpkix-jdk15on-1.65.jar",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-encrypt-3.0.0.jar <- via org.bouncycastle:bcprov-jdk15on/1.60 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/bcprov-jdk15on-1.65.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-34453",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error.The function `shuffle(int[] input)` in the file `BitShuffle.java` receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a `java.lang.NegativeArraySizeException` exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as `java.lang.ArrayIndexOutOfBoundsException`.The same issue exists also when using the `shuffle` functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.Version 1.1.10.1 contains a patch for this vulnerability.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/snappy-java-1.1.7.6.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/snappy-java-1.1.7.6.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-34454",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing an unrecoverable fatal error.The function `compress(char[] input)` in the file `Snappy.java` receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the rawCompress` function.Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array.Since the maxCompressedLength function treats the length as an unsigned integer, it doesn’t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a `java.lang.NegativeArraySizeException` exception will be raised while trying to allocate the array `buf`. On the other side, if the result is positive, the `buf` array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error.The same issue exists also when using the `compress` functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won’t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place.Version 1.1.10.1 contains a patch for this issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/snappy-java-1.1.7.6.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/snappy-java-1.1.7.6.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-34455",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "snappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1.The code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn’t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk. In the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesn’t test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error.Version 1.1.10.1 contains a patch for this issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/snappy-java-1.1.7.6.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/snappy-java-1.1.7.6.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-34462",
    "cve_score": 6.5,
    "exploitable": "YES",
    "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap. The `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. Normally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`. This vulnerability has been fixed in version 4.1.94.Final.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-handler-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-handler-4.1.50.Final.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-36478",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "Eclipse Jetty provides a web server and servlet container. In versions 11.0.0 through 11.0.15, 10.0.0 through 10.0.15, and 9.0.0 through 9.4.52, an integer overflow in `MetaDataBuilder.checkSize` allows for HTTP/2 HPACK header values toexceed their size limit. `MetaDataBuilder.java` determines if a header name or value exceeds the size limit, and throws an exception if the limit is exceeded. However, when length is very large and huffman is true, the multiplication by 4 in line 295will overflow, and length will become negative. `(_size+length)` will now be negative, and the check on line 296 will not be triggered. Furthermore, `MetaDataBuilder.checkSize` allows for user-entered HPACK header value sizes to be negative, potentially leading to a very large buffer allocation later on when the user-entered size is multiplied by 2. This means that if a user provides a negative length value (or, more precisely, a length value which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a very large positive number when multiplied by 2, then the user can cause a very large buffer to be allocated on the server. Users of HTTP/2 can be impacted by a remote denial of service attack. The issue has been fixed in versions 11.0.16, 10.0.16, and 9.4.53. There are no known workarounds.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/http2-hpack-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-common-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-hpack/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-common-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-hpack/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-hpack-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-hpack-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-common-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-hpack/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-36479",
    "cve_score": 4.3,
    "exploitable": "YES",
    "description": "Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2. Exploitable: YES Introduced in: 9.4.39.v20210325 Resolved in: 9.4.43 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-deploy-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-webapp-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-39913",
    "cve_score": 8.8,
    "exploitable": "NO",
    "description": "Deserialization of Untrusted Data, Improper Input Validation vulnerability in Apache UIMA Java SDK, Apache UIMA Java SDK, Apache UIMA Java SDK, Apache UIMA Java SDK.This issue affects Apache UIMA Java SDK: before 3.5.0.Users are recommended to upgrade to version 3.5.0, which fixes the issue.There are several locations in the code where serialized Java objects are deserialized without verifying the data. This affects in particular: * the deserialization of a Java-serialized CAS, but also other binary CAS formats that include TSI information using the CasIOUtils class; * the CAS Editor Eclipse plugin which uses the the CasIOUtils class to load data; * the deserialization of a Java-serialized CAS of the Vinci Analysis Engine service which can receive using Java-serialized CAS objects over network connections; * the CasAnnotationViewerApplet and the CasTreeViewerApplet; * the checkpointing feature of the CPE module.Note that the UIMA framework by default does not start any remotely accessible services (i.e. Vinci) that would be vulnerable to this issue. A user or developer would need to make an active choice to start such a service. However, users or developers may use the CasIOUtils in their own applications and services to parse serialized CAS data. They are affected by this issue unless they ensure that the data passed to CasIOUtils is not a serialized Java object.When using Vinci or using CasIOUtils in own services/applications, the unrestricted deserialization of Java-serialized CAS files may allow arbitrary (remote) code execution.As a remedy, it is possible to set up a global or context-specific ObjectInputFilter (cf. https://openjdk.org/jeps/290 and https://openjdk.org/jeps/415 ) if running UIMA on a Java version that supports it. Note that Java 1.8 does not support the ObjectInputFilter, so there is no remedy when running on this out-of-support platform. An upgrade to a recent Java version is strongly recommended if you need to secure an UIMA version that is affected by this issue.To mitigate the issue on a Java 9+ platform, you can configure a filter pattern through the \"jdk.serialFilter\" system property using a semicolon as a separator:To allow deserializing Java-serialized binary CASes, add the classes: * org.apache.uima.cas.impl.CASCompleteSerializer * org.apache.uima.cas.impl.CASMgrSerializer * org.apache.uima.cas.impl.CASSerializer * java.lang.StringTo allow deserializing CPE Checkpoint data, add the following classes (and any custom classes your application uses to store its checkpoints): * org.apache.uima.collection.impl.cpm.CheckpointData * org.apache.uima.util.ProcessTrace * org.apache.uima.util.impl.ProcessTrace_impl * org.apache.uima.collection.base_cpm.SynchPointMake sure to use \"!*\" as the final component to the filter pattern to disallow deserialization of any classes not listed in the pattern.Apache UIMA 3.5.0 uses tightly scoped ObjectInputFilters when reading Java-serialized data depending on the type of data being expected. Configuring a global filter is not necessary with this version.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.uima:uimaj-core/3.1.1 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-40167",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario. Exploitable: NO Introduced in: 9.0.0.v20130308 Resolved in: 9.4.52.v20230823 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario. Exploitable: NO Introduced in: 9.4.27.v20200227 Resolved in: 9.4.37 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario. Exploitable: NO Introduced in: 9.4.39.v20210325 Resolved in: 9.4.43 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario. Exploitable: NO Introduced in: 9.4.41.v20210516 Resolved in: 9.4.52 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario. Exploitable: NO Introduced in: 9.4.41.v20210516 Resolved in: 9.4.52.v20230823 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-rewrite-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-alpn-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/start.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-xml-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-deploy-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-webapp-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-jmx-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-security-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-41900",
    "cve_score": 4.3,
    "exploitable": "YES",
    "description": "Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue. Exploitable: YES Introduced in: 9.4.27.v20200227 Resolved in: 9.4.37 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue. Exploitable: YES Introduced in: 9.4.39.v20210325 Resolved in: 9.4.43 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue. Exploitable: YES Introduced in: 9.4.41.v20210516 Resolved in: 9.4.52 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue. Exploitable: YES Introduced in: 9.4.41.v20210516 Resolved in: 9.4.52.v20230823 Patch mandate: NO Discovered by: - Sourced from: NVD, OSV Description: Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-rewrite-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-alpn-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-alpn-java-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/start.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-xml-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-deploy-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-alpn-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-http-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-io-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-util-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-alpn-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-webapp-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-jmx-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-util/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-security-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-webapp/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-io/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-43642",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "snappy-java is a Java port of the snappy, a fast C++ compresser/decompresser developed by Google. The SnappyInputStream was found to be vulnerable to Denial of Service (DoS) attacks when decompressing data with a too large chunk size. Due to missing upper bound check on chunk length, an unrecoverable fatal error can occur. All versions of snappy-java including the latest released version 1.1.10.3 are vulnerable to this issue. A fix has been introduced in commit `9f8c3cf74` which will be included in the 1.1.10.4 release. Users are advised to upgrade. Users unable to upgrade should only accept compressed data from trusted sources.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/snappy-java-1.1.7.6.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/snappy-java-1.1.7.6.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-44487",
    "cve_score": 7.5,
    "exploitable": "YES (MALWARE)",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023. Exploitable: YES (MALWARE) Introduced in: 9.3.0 Resolved in: 9.4.53 Patch mandate: YES (MANDATORY) Discovered by: - Sourced from: KEV, NVD, OSV Description: The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/http2-server-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-common/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-common-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-common-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-client-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-common/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-client-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-common/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-common-9.4.41.v20210516.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-44981",
    "cve_score": 9.1,
    "exploitable": "NO",
    "description": "Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper. If SASL Quorum Peer authentication is enabled in ZooKeeper (quorum.auth.enableSasl=true), the authorization is done by verifying that the instance part in SASL authentication ID is listed in zoo.cfg server list. The instance part in SASL auth ID is optional and if it's missing, like 'eve@EXAMPLE.COM', the authorization check will be skipped. As a result an arbitrary endpoint could join the cluster and begin propagating counterfeit changes to the leader, essentially giving it complete read-write access to the data tree. Quorum Peer authentication is not enabled by default.Users are recommended to upgrade to version 3.9.1, 3.8.3, 3.7.2, which fixes the issue.Alternately ensure the ensemble election/quorum communication is protected by a firewall as this will mitigate the issue.See the documentation for more details on correct cluster administration.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/zookeeper-3.6.2.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/zookeeper-3.6.2.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-46120",
    "cve_score": 7.5,
    "exploitable": "YES",
    "description": "The RabbitMQ Java client library allows Java and JVM-based applications to connect to and interact with RabbitMQ nodes. `maxBodyLebgth` was not used when receiving Message objects. Attackers could send a very large Message causing a memory overflow and triggering an OOM Error. Users of RabbitMQ may suffer from DoS attacks from RabbitMQ Java client which will ultimately exhaust the memory of the consumer. This vulnerability was patched in version 5.18.0.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-graphite-4.1.5.jar <- via com.rabbitmq:amqp-client/5.5.3 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-50291",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "Insufficiently Protected Credentials vulnerability in Apache Solr.This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.3.0.One of the two endpoints that publishes the Solr process' Java system properties, /admin/info/properties, was only setup to hide system properties that had \"password\" contained in the name.There are a number of sensitive system properties, such as \"basicauth\" and \"aws.secretKey\" do not contain \"password\", thus their values were published via the \"/admin/info/properties\" endpoint.This endpoint populates the list of System Properties on the home screen of the Solr Admin page, making the exposed credentials visible in the UI. This /admin/info/properties endpoint is protected under the \"config-read\" permission.Therefore, Solr Clouds with Authorization enabled will only be vulnerable through logged-in users that have the \"config-read\" permission.Users are recommended to upgrade to version 9.3.0 or 8.11.3, which fixes the issue.A single option now controls hiding Java system property for all endpoints, \"-Dsolr.hiddenSysProps\".By default all known sensitive properties are hidden (including \"-Dbasicauth\"), as well as any property with a name containing \"secret\" or \"password\".Users who cannot upgrade can also use the following Java system property to fix the issue: '-Dsolr.redaction.system.pattern=.*(password|secret|basicauth).*'",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/dist/solr-core-8.10.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-50292",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "Incorrect Permission Assignment for Critical Resource, Improper Control of Dynamically-Managed Code Resources vulnerability in Apache Solr.This issue affects Apache Solr: from 8.10.0 through 8.11.2, from 9.0.0 before 9.3.0.The Schema Designer was introduced to allow users to more easily configure and test new Schemas and configSets.However, when the feature was created, the \"trust\" (authentication) of these configSets was not considered.External library loading is only available to configSets that are \"trusted\" (created by authenticated users), thus non-authenticated users are unable to perform Remote Code Execution.Since the Schema Designer loaded configSets without taking their \"trust\" into account, configSets that were created by unauthenticated users were allowed to load external libraries when used in the Schema Designer.Users are recommended to upgrade to version 9.3.0, which fixes the issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/dist/solr-core-8.10.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-50298",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Solr.This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.4.1.Solr Streaming Expressions allows users to extract data from other Solr Clouds, using a \"zkHost\" parameter.When original SolrCloud is setup to use ZooKeeper credentials and ACLs, they will be sent to whatever \"zkHost\" the user provides.An attacker could setup a server to mock ZooKeeper, that accepts ZooKeeper requests with credentials and ACLs and extracts the sensitive information,then send a streaming expression using the mock server's address in \"zkHost\". Streaming Expressions are exposed via the \"/streaming\" handler, with \"read\" permissions.Users are recommended to upgrade to version 8.11.3 or 9.4.1, which fix the issue.From these versions on, only zkHost values that have the same server address (regardless of chroot), will use the given ZooKeeper credentials and ACLs when connecting.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/dist/solr-core-8.10.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-50386",
    "cve_score": 8.8,
    "exploitable": "YES (MALWARE)",
    "description": "Improper Control of Dynamically-Managed Code Resources, Unrestricted Upload of File with Dangerous Type, Inclusion of Functionality from Untrusted Control Sphere vulnerability in Apache Solr.This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.4.1.In the affected versions, Solr ConfigSets accepted Java jar and class files to be uploaded through the ConfigSets API.When backing up Solr Collections, these configSet files would be saved to disk when using the LocalFileSystemRepository (the default for backups).If the backup was saved to a directory that Solr uses in its ClassPath/ClassLoaders, then the jar and class files would be available to use with any ConfigSet, trusted or untrusted.When Solr is run in a secure way (Authorization enabled), as is strongly suggested, this vulnerability is limited to extending the Backup permissions with the ability to add libraries.Users are recommended to upgrade to version 8.11.3 or 9.4.1, which fix the issue.In these versions, the following protections have been added: * Users are no longer able to upload files to a configSet that could be executed via a Java ClassLoader. * The Backup API restricts saving backups to directories that are used in the ClassLoader.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/dist/solr-core-8.10.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-51074",
    "cve_score": 5.3,
    "exploitable": "YES",
    "description": "json-path v2.8.0 was discovered to contain a stack overflow via the Criteria.parse() method.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/json-path-2.4.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2023-51775",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "The jose4j component before 0.9.4 for Java allows attackers to cause a denial of service (CPU consumption) via a large p2c (aka PBES2 Count) value.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jose4j-0.6.5.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-21634",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "Amazon Ion is a Java implementation of the Ion data notation. Prior to version 1.10.5, a potential denial-of-service issue exists in `ion-java` for applications that use `ion-java` to deserialize Ion text encoded data, or deserialize Ion text or binary encoded data into the `IonValue` model and then invoke certain `IonValue` methods on that in-memory representation. An actor could craft Ion data that, when loaded by the affected application and/or processed using the `IonValue` model, results in a `StackOverflowError` originating from the `ion-java` library. The patch is included in `ion-java` 1.10.5. As a workaround, do not load data which originated from an untrusted source or that could have been tampered with.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/s3-repository/lib/ion-java-1.0.2.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-21742",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "Improper input validation allows for header injection in MIME4J library when using MIME4J DOM for composing message.This can be exploited by an attacker to add unintended headers to MIME messages.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.apache.james:apache-mime4j-core/0.8.3 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/apache-mime4j-core-0.8.3.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-22201",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "Jetty is a Java based web server and servlet engine. An HTTP/2 SSL connection that is established and TCP congested will be leaked when it times out. An attacker can cause many connections to end up in this state, and the server may run out of file descriptors, eventually causing the server to stop accepting new connections from valid clients. The vulnerability is patched in 9.4.54, 10.0.20, 11.0.20, and 12.0.6.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/http2-server-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-common/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/http2-common-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-common-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-client-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-common/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-client-9.4.41.v20210516.jar <- via org.eclipse.jetty.http2:http2-common/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-common-9.4.41.v20210516.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-23454",
    "cve_score": 6.2,
    "exploitable": "NO",
    "description": "Apache Hadoop’s RunJar.run() does not set permissions for temporary directory by default. If sensitive data will be present in this file, all the other local users may be able to view the content.This is because, on unix-like systems, the system temporary directory isshared between all local users. As such, files written in this directory,without setting the correct posix permissions explicitly, may be viewableby all other local users.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/hadoop-common-3.2.2.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-23944",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "Information disclosure in persistent watchers handling in Apache ZooKeeper due to missing ACL check. It allows an attacker to monitor child znodes by attaching a persistent watcher (addWatch command) to a parent which the attacker has already access to. ZooKeeper server doesn't do ACL check when the persistent watcher is triggered and as a consequence, the full path of znodes that a watch event gets triggered upon is exposed to the owner of the watcher. It's important to note that only the path is exposed by this vulnerability, not the data of znode, but since znode path can contain sensitive information like user name or login ID, this issue is potentially critical.Users are recommended to upgrade to version 3.9.2, 3.8.4 which fixes the issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/zookeeper-3.6.2.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/zookeeper-3.6.2.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-25710",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0.Users are recommended to upgrade to version 1.26.0 which fixes the issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/commons-compress-1.20.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-29131",
    "cve_score": 7.3,
    "exploitable": "NO",
    "description": "Out-of-bounds Write vulnerability in Apache Commons Configuration.This issue affects Apache Commons Configuration: from 2.0 before 2.10.1.Users are recommended to upgrade to version 2.10.1, which fixes the issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-29133",
    "cve_score": 5.4,
    "exploitable": "NO",
    "description": "Out-of-bounds Write vulnerability in Apache Commons Configuration.This issue affects Apache Commons Configuration: from 2.0 before 2.10.1.Users are recommended to upgrade to version 2.10.1, which fixes the issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-29857",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "An issue was discovered in ECCurve.java and ECCurve.cs in Bouncy Castle Java (BC Java) before 1.78, BC Java LTS before 2.73.6, BC-FJA before 1.0.2.5, and BC C# .Net before 2.3.1. Importing an EC certificate with crafted F2m parameters can lead to excessive CPU consumption during the evaluation of the curve parameters.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.bouncycastle:bcprov-jdk15on/1.65 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-encrypt-3.0.0.jar <- via org.bouncycastle:bcprov-jdk15on/1.60 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/bcprov-jdk15on-1.65.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-30171",
    "cve_score": 5.9,
    "exploitable": "NO",
    "description": "An issue was discovered in Bouncy Castle Java TLS API and JSSE Provider before 1.78. Timing-based leakage may occur in RSA based handshakes because of exception processing.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.bouncycastle:bcprov-jdk15on/1.65 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-encrypt-3.0.0.jar <- via org.bouncycastle:bcprov-jdk15on/1.60 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/bcprov-jdk15on-1.65.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-30172",
    "cve_score": 7.5,
    "exploitable": "NO",
    "description": "An issue was discovered in Bouncy Castle Java Cryptography APIs before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/tika-parsers-1.24.1.jar <- via org.bouncycastle:bcprov-jdk15on/1.65 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/jackcess-encrypt-3.0.0.jar <- via org.bouncycastle:bcprov-jdk15on/1.60 (package)",
      "unpacked_files/0/solr-8.10.0/contrib/extraction/lib/bcprov-jdk15on-1.65.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-38827",
    "cve_score": 4.8,
    "exploitable": "NO",
    "description": "The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly.",
    "detections": null,
    "suppressed": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-configuration2-2.1.1.jar <- via org.springframework:spring-core/4.2.5.RELEASE (package)"
    ]
  },
  {
    "cve_name": "CVE-2024-47535",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crashes. This vulnerability is fixed in 4.1.115.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-buffer-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-resolver-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-codec-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-buffer-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-native-unix-common-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-resolver-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-codec-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-native-epoll-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-native-epoll-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-common-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-native-unix-common-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-common-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-47554",
    "cve_score": 4.3,
    "exploitable": "NO",
    "description": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.The org.apache.commons.io.input.XmlStreamReader class may excessively consume CPU resources when processing maliciously crafted input.This issue affects Apache Commons IO: from 2.0 before 2.14.0.Users are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/commons-io-2.8.0.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/commons-io-2.8.0.jar",
      "unpacked_files/0/solr-8.10.0/contrib/velocity/lib/velocity-engine-core-2.0.jar <- via Apache Commons IO/2.5 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-52012",
    "cve_score": 5.4,
    "exploitable": "NO",
    "description": "Relative Path Traversal vulnerability in Apache Solr.Solr instances running on Windows are vulnerable to arbitrary filepath write-access, due to a lack of input-sanitation in the \"configset upload\" API. Commonly known as a \"zipslip\", maliciously constructed ZIP files can use relative filepaths to write data to unanticipated parts of the filesystem. This issue affects Apache Solr: from 6.6 through 9.7.0.Users are recommended to upgrade to version 9.8.0, which fixes the issue. Users unable to upgrade may also safely prevent the issue by using Solr's \"Rule-Based Authentication Plugin\" to restrict access to the configset upload API, so that it can only be accessed by a trusted set of administrators/users.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/dist/solr-core-8.10.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-6763",
    "cve_score": 5.3,
    "exploitable": "YES",
    "description": "Eclipse Jetty is a lightweight, highly scalable, Java-based web server and Servlet engine . It includes a utility class, HttpURI, for URI/URL parsing.The HttpURI class does insufficient validation on the authority segment of a URI. However the behaviour of HttpURI differs from the common browsers in how it handles a URI that would be considered invalid if fully validated against the RRC. Specifically HttpURI and the browser may differ on the value of the host extracted from an invalid URI and thus a combination of Jetty and a vulnerable browser may be vulnerable to a open redirect attack or to a SSRF attack if the URI is used after passing validation checks.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-http-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-http-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-http-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/http2-hpack-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/jetty-client-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-http/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-8184",
    "cve_score": 6.5,
    "exploitable": "NO",
    "description": "There exists a security vulnerability in Jetty's ThreadLimitHandler.getRemote() which can be exploited by unauthorized users to cause remote denial-of-service (DoS) attack. By repeatedly sending crafted requests, attackers can trigger OutofMemory errors and exhaust the server's memory.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/http2-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-rewrite-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-alpn-server-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/metrics-jetty9-4.1.5.jar <- via org.eclipse.jetty:jetty-server/9.4.27.v20200227 (package)",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-server-9.4.41.v20210516.jar",
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-security-9.4.41.v20210516.jar <- via org.eclipse.jetty:jetty-server/9.4.41.v20210516 (package)"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2024-9823",
    "cve_score": 5.3,
    "exploitable": "NO",
    "description": "There exists a security vulnerability in Jetty's DosFilter which can be exploited by unauthorized users to cause remote denial-of-service (DoS) attack on the server using DosFilter. By repeatedly sending crafted requests, attackers can trigger OutofMemory errors and exhaust the server's memory finally.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/lib/jetty-servlets-9.4.41.v20210516.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2025-24814",
    "cve_score": 5.4,
    "exploitable": "NO",
    "description": "Core creation allows users to replace \"trusted\" configset files with arbitrary configurationSolr instances that (1) use the \"FileSystemConfigSetService\" component (the default in \"standalone\" or \"user-managed\" mode), and (2) are running without authentication and authorization are vulnerable to a sort of privilege escalation wherein individual \"trusted\" configset files can be ignored in favor of potentially-untrusted replacements available elsewhere on the filesystem. These replacement config files are treated as \"trusted\" and can use \"\" tags to add to Solr's classpath, which an attacker might use to load malicious code as a searchComponent or other plugin.This issue affects all Apache Solr versions up through Solr 9.7. Users can protect against the vulnerability by enabling authentication and authorization on their Solr clusters or switching to SolrCloud (and away from \"FileSystemConfigSetService\"). Users are also recommended to upgrade to Solr 9.8.0, which mitigates this issue by disabling use of \"\" tags by default.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/solr-core-8.10.0.jar",
      "unpacked_files/0/solr-8.10.0/dist/solr-core-8.10.0.jar"
    ],
    "suppressed": null
  },
  {
    "cve_name": "CVE-2025-25193",
    "cve_score": 5.5,
    "exploitable": "NO",
    "description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability in versions up to and including 4.1.118.Final. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crash. A similar issue was previously reported as CVE-2024-47535. This issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit. Commit d1fbda62d3a47835d3fb35db8bd42ecc205a5386 contains an updated fix.",
    "detections": [
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-buffer-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-resolver-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-codec-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-buffer-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-native-unix-common-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-resolver-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-codec-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-transport-native-epoll-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-native-epoll-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-common-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-transport-native-unix-common-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)",
      "unpacked_files/0/solr-8.10.0/server/solr-webapp/webapp/WEB-INF/lib/netty-common-4.1.50.Final.jar",
      "unpacked_files/0/solr-8.10.0/dist/solrj-lib/netty-handler-4.1.50.Final.jar <- via io.netty:netty-common/4.1.50.Final (package)"
    ],
    "suppressed": null
  }
]